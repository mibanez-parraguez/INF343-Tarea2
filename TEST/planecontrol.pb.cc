// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: planecontrol.proto

#include "planecontrol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_planecontrol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_planecontrol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_plane;
}  // namespace protobuf_planecontrol_2eproto
namespace tareados {
class LandRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LandRequest>
      _instance;
} _LandRequest_default_instance_;
class LandResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LandResponse>
      _instance;
} _LandResponse_default_instance_;
class TakeoffRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TakeoffRequest>
      _instance;
} _TakeoffRequest_default_instance_;
class TakeoffResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TakeoffResponse>
      _instance;
} _TakeoffResponse_default_instance_;
class InfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoRequest>
      _instance;
} _InfoRequest_default_instance_;
class InfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoResponse>
      _instance;
} _InfoResponse_default_instance_;
class planeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<plane>
      _instance;
} _plane_default_instance_;
}  // namespace tareados
namespace protobuf_planecontrol_2eproto {
static void InitDefaultsLandRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareados::_LandRequest_default_instance_;
    new (ptr) ::tareados::LandRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareados::LandRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LandRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLandRequest}, {}};

static void InitDefaultsLandResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareados::_LandResponse_default_instance_;
    new (ptr) ::tareados::LandResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareados::LandResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LandResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLandResponse}, {}};

static void InitDefaultsTakeoffRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareados::_TakeoffRequest_default_instance_;
    new (ptr) ::tareados::TakeoffRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareados::TakeoffRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TakeoffRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTakeoffRequest}, {}};

static void InitDefaultsTakeoffResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareados::_TakeoffResponse_default_instance_;
    new (ptr) ::tareados::TakeoffResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareados::TakeoffResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TakeoffResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTakeoffResponse}, {}};

static void InitDefaultsInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareados::_InfoRequest_default_instance_;
    new (ptr) ::tareados::InfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareados::InfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInfoRequest}, {}};

static void InitDefaultsInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareados::_InfoResponse_default_instance_;
    new (ptr) ::tareados::InfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareados::InfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInfoResponse}, {
      &protobuf_planecontrol_2eproto::scc_info_plane.base,}};

static void InitDefaultsplane() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareados::_plane_default_instance_;
    new (ptr) ::tareados::plane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareados::plane::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_plane =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsplane}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LandRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LandResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TakeoffRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TakeoffResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_plane.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::LandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::LandRequest, planeid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::LandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::LandResponse, runway_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::LandResponse, queue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::LandResponse, altitude_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffRequest, planeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffRequest, dest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffRequest, passengers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffRequest, fuel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffRequest, maxload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffResponse, altitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffResponse, runway_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffResponse, ipdest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffResponse, portdest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffResponse, queuepos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::TakeoffResponse, prevplane_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::InfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::InfoRequest, controltower_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::InfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::InfoResponse, departureplane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::InfoResponse, arrivalplane_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::plane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::plane, planeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::plane, sourcename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::plane, destname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::plane, departuretime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::plane, arrivaltime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::plane, sourcerunway_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::plane, destrunway_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareados::plane, altitude_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tareados::LandRequest)},
  { 6, -1, sizeof(::tareados::LandResponse)},
  { 14, -1, sizeof(::tareados::TakeoffRequest)},
  { 24, -1, sizeof(::tareados::TakeoffResponse)},
  { 35, -1, sizeof(::tareados::InfoRequest)},
  { 41, -1, sizeof(::tareados::InfoResponse)},
  { 48, -1, sizeof(::tareados::plane)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareados::_LandRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareados::_LandResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareados::_TakeoffRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareados::_TakeoffResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareados::_InfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareados::_InfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareados::_plane_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "planecontrol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022planecontrol.proto\022\010tareados\"\036\n\013LandRe"
      "quest\022\017\n\007planeId\030\001 \001(\005\"\?\n\014LandResponse\022\016"
      "\n\006runway\030\001 \001(\005\022\r\n\005queue\030\002 \001(\005\022\020\n\010altitud"
      "e\030\003 \001(\005\"b\n\016TakeoffRequest\022\017\n\007planeId\030\001 \001"
      "(\005\022\014\n\004dest\030\002 \001(\t\022\022\n\npassengers\030\003 \001(\005\022\014\n\004"
      "fuel\030\004 \001(\005\022\017\n\007maxLoad\030\005 \001(\005\"z\n\017TakeoffRe"
      "sponse\022\020\n\010altitude\030\001 \001(\005\022\016\n\006runway\030\002 \001(\005"
      "\022\016\n\006ipDest\030\003 \001(\014\022\020\n\010portDest\030\004 \001(\014\022\020\n\010qu"
      "euePos\030\005 \001(\005\022\021\n\tprevPlane\030\006 \001(\t\"#\n\013InfoR"
      "equest\022\024\n\014controlTower\030\001 \001(\t\"^\n\014InfoResp"
      "onse\022\'\n\016departurePlane\030\001 \003(\0132\017.tareados."
      "plane\022%\n\014arrivalPlane\030\002 \003(\0132\017.tareados.p"
      "lane\"\246\001\n\005plane\022\017\n\007planeId\030\001 \001(\005\022\022\n\nsourc"
      "eName\030\002 \001(\t\022\020\n\010destName\030\003 \001(\t\022\025\n\rdepartu"
      "reTime\030\004 \001(\t\022\023\n\013arrivalTime\030\005 \001(\t\022\024\n\014sou"
      "rceRunway\030\006 \001(\005\022\022\n\ndestRunway\030\007 \001(\005\022\020\n\010a"
      "ltitude\030\010 \001(\0052\313\001\n\023PlaneControlService\0227\n"
      "\004Land\022\025.tareados.LandRequest\032\026.tareados."
      "LandResponse\"\000\022@\n\007Takeoff\022\030.tareados.Tak"
      "eoffRequest\032\031.tareados.TakeoffResponse\"\000"
      "\0229\n\004Info\022\025.tareados.InfoRequest\032\026.taread"
      "os.InfoResponse\"\0000\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 867);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "planecontrol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_planecontrol_2eproto
namespace tareados {

// ===================================================================

void LandRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LandRequest::kPlaneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LandRequest::LandRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_planecontrol_2eproto::scc_info_LandRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareados.LandRequest)
}
LandRequest::LandRequest(const LandRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  planeid_ = from.planeid_;
  // @@protoc_insertion_point(copy_constructor:tareados.LandRequest)
}

void LandRequest::SharedCtor() {
  planeid_ = 0;
}

LandRequest::~LandRequest() {
  // @@protoc_insertion_point(destructor:tareados.LandRequest)
  SharedDtor();
}

void LandRequest::SharedDtor() {
}

void LandRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LandRequest::descriptor() {
  ::protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LandRequest& LandRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_planecontrol_2eproto::scc_info_LandRequest.base);
  return *internal_default_instance();
}


void LandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tareados.LandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  planeid_ = 0;
  _internal_metadata_.Clear();
}

bool LandRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareados.LandRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 planeId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &planeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareados.LandRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareados.LandRequest)
  return false;
#undef DO_
}

void LandRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareados.LandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 planeId = 1;
  if (this->planeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->planeid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareados.LandRequest)
}

::google::protobuf::uint8* LandRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareados.LandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 planeId = 1;
  if (this->planeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->planeid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareados.LandRequest)
  return target;
}

size_t LandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareados.LandRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 planeId = 1;
  if (this->planeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->planeid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LandRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareados.LandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LandRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LandRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareados.LandRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareados.LandRequest)
    MergeFrom(*source);
  }
}

void LandRequest::MergeFrom(const LandRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareados.LandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.planeid() != 0) {
    set_planeid(from.planeid());
  }
}

void LandRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareados.LandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LandRequest::CopyFrom(const LandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareados.LandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LandRequest::IsInitialized() const {
  return true;
}

void LandRequest::Swap(LandRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LandRequest::InternalSwap(LandRequest* other) {
  using std::swap;
  swap(planeid_, other->planeid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LandRequest::GetMetadata() const {
  protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LandResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LandResponse::kRunwayFieldNumber;
const int LandResponse::kQueueFieldNumber;
const int LandResponse::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LandResponse::LandResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_planecontrol_2eproto::scc_info_LandResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareados.LandResponse)
}
LandResponse::LandResponse(const LandResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&runway_, &from.runway_,
    static_cast<size_t>(reinterpret_cast<char*>(&altitude_) -
    reinterpret_cast<char*>(&runway_)) + sizeof(altitude_));
  // @@protoc_insertion_point(copy_constructor:tareados.LandResponse)
}

void LandResponse::SharedCtor() {
  ::memset(&runway_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&runway_)) + sizeof(altitude_));
}

LandResponse::~LandResponse() {
  // @@protoc_insertion_point(destructor:tareados.LandResponse)
  SharedDtor();
}

void LandResponse::SharedDtor() {
}

void LandResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LandResponse::descriptor() {
  ::protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LandResponse& LandResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_planecontrol_2eproto::scc_info_LandResponse.base);
  return *internal_default_instance();
}


void LandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tareados.LandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&runway_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&runway_)) + sizeof(altitude_));
  _internal_metadata_.Clear();
}

bool LandResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareados.LandResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 runway = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &runway_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 queue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 altitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareados.LandResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareados.LandResponse)
  return false;
#undef DO_
}

void LandResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareados.LandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 runway = 1;
  if (this->runway() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->runway(), output);
  }

  // int32 queue = 2;
  if (this->queue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->queue(), output);
  }

  // int32 altitude = 3;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->altitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareados.LandResponse)
}

::google::protobuf::uint8* LandResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareados.LandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 runway = 1;
  if (this->runway() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->runway(), target);
  }

  // int32 queue = 2;
  if (this->queue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->queue(), target);
  }

  // int32 altitude = 3;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->altitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareados.LandResponse)
  return target;
}

size_t LandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareados.LandResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 runway = 1;
  if (this->runway() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->runway());
  }

  // int32 queue = 2;
  if (this->queue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->queue());
  }

  // int32 altitude = 3;
  if (this->altitude() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->altitude());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LandResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareados.LandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LandResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LandResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareados.LandResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareados.LandResponse)
    MergeFrom(*source);
  }
}

void LandResponse::MergeFrom(const LandResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareados.LandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.runway() != 0) {
    set_runway(from.runway());
  }
  if (from.queue() != 0) {
    set_queue(from.queue());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
}

void LandResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareados.LandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LandResponse::CopyFrom(const LandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareados.LandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LandResponse::IsInitialized() const {
  return true;
}

void LandResponse::Swap(LandResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LandResponse::InternalSwap(LandResponse* other) {
  using std::swap;
  swap(runway_, other->runway_);
  swap(queue_, other->queue_);
  swap(altitude_, other->altitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LandResponse::GetMetadata() const {
  protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TakeoffRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeoffRequest::kPlaneIdFieldNumber;
const int TakeoffRequest::kDestFieldNumber;
const int TakeoffRequest::kPassengersFieldNumber;
const int TakeoffRequest::kFuelFieldNumber;
const int TakeoffRequest::kMaxLoadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeoffRequest::TakeoffRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_planecontrol_2eproto::scc_info_TakeoffRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareados.TakeoffRequest)
}
TakeoffRequest::TakeoffRequest(const TakeoffRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dest().size() > 0) {
    dest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_);
  }
  ::memcpy(&planeid_, &from.planeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxload_) -
    reinterpret_cast<char*>(&planeid_)) + sizeof(maxload_));
  // @@protoc_insertion_point(copy_constructor:tareados.TakeoffRequest)
}

void TakeoffRequest::SharedCtor() {
  dest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&planeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxload_) -
      reinterpret_cast<char*>(&planeid_)) + sizeof(maxload_));
}

TakeoffRequest::~TakeoffRequest() {
  // @@protoc_insertion_point(destructor:tareados.TakeoffRequest)
  SharedDtor();
}

void TakeoffRequest::SharedDtor() {
  dest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TakeoffRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TakeoffRequest::descriptor() {
  ::protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeoffRequest& TakeoffRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_planecontrol_2eproto::scc_info_TakeoffRequest.base);
  return *internal_default_instance();
}


void TakeoffRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tareados.TakeoffRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&planeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxload_) -
      reinterpret_cast<char*>(&planeid_)) + sizeof(maxload_));
  _internal_metadata_.Clear();
}

bool TakeoffRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareados.TakeoffRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 planeId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &planeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dest()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dest().data(), static_cast<int>(this->dest().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareados.TakeoffRequest.dest"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 passengers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passengers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fuel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fuel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxLoad = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareados.TakeoffRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareados.TakeoffRequest)
  return false;
#undef DO_
}

void TakeoffRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareados.TakeoffRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 planeId = 1;
  if (this->planeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->planeid(), output);
  }

  // string dest = 2;
  if (this->dest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest().data(), static_cast<int>(this->dest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.TakeoffRequest.dest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dest(), output);
  }

  // int32 passengers = 3;
  if (this->passengers() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->passengers(), output);
  }

  // int32 fuel = 4;
  if (this->fuel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fuel(), output);
  }

  // int32 maxLoad = 5;
  if (this->maxload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->maxload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareados.TakeoffRequest)
}

::google::protobuf::uint8* TakeoffRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareados.TakeoffRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 planeId = 1;
  if (this->planeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->planeid(), target);
  }

  // string dest = 2;
  if (this->dest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dest().data(), static_cast<int>(this->dest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.TakeoffRequest.dest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dest(), target);
  }

  // int32 passengers = 3;
  if (this->passengers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->passengers(), target);
  }

  // int32 fuel = 4;
  if (this->fuel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->fuel(), target);
  }

  // int32 maxLoad = 5;
  if (this->maxload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->maxload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareados.TakeoffRequest)
  return target;
}

size_t TakeoffRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareados.TakeoffRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dest = 2;
  if (this->dest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dest());
  }

  // int32 planeId = 1;
  if (this->planeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->planeid());
  }

  // int32 passengers = 3;
  if (this->passengers() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->passengers());
  }

  // int32 fuel = 4;
  if (this->fuel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fuel());
  }

  // int32 maxLoad = 5;
  if (this->maxload() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TakeoffRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareados.TakeoffRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeoffRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeoffRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareados.TakeoffRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareados.TakeoffRequest)
    MergeFrom(*source);
  }
}

void TakeoffRequest::MergeFrom(const TakeoffRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareados.TakeoffRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dest().size() > 0) {

    dest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dest_);
  }
  if (from.planeid() != 0) {
    set_planeid(from.planeid());
  }
  if (from.passengers() != 0) {
    set_passengers(from.passengers());
  }
  if (from.fuel() != 0) {
    set_fuel(from.fuel());
  }
  if (from.maxload() != 0) {
    set_maxload(from.maxload());
  }
}

void TakeoffRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareados.TakeoffRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeoffRequest::CopyFrom(const TakeoffRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareados.TakeoffRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeoffRequest::IsInitialized() const {
  return true;
}

void TakeoffRequest::Swap(TakeoffRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeoffRequest::InternalSwap(TakeoffRequest* other) {
  using std::swap;
  dest_.Swap(&other->dest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(planeid_, other->planeid_);
  swap(passengers_, other->passengers_);
  swap(fuel_, other->fuel_);
  swap(maxload_, other->maxload_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TakeoffRequest::GetMetadata() const {
  protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TakeoffResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeoffResponse::kAltitudeFieldNumber;
const int TakeoffResponse::kRunwayFieldNumber;
const int TakeoffResponse::kIpDestFieldNumber;
const int TakeoffResponse::kPortDestFieldNumber;
const int TakeoffResponse::kQueuePosFieldNumber;
const int TakeoffResponse::kPrevPlaneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeoffResponse::TakeoffResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_planecontrol_2eproto::scc_info_TakeoffResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareados.TakeoffResponse)
}
TakeoffResponse::TakeoffResponse(const TakeoffResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ipdest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipdest().size() > 0) {
    ipdest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipdest_);
  }
  portdest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.portdest().size() > 0) {
    portdest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portdest_);
  }
  prevplane_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prevplane().size() > 0) {
    prevplane_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prevplane_);
  }
  ::memcpy(&altitude_, &from.altitude_,
    static_cast<size_t>(reinterpret_cast<char*>(&queuepos_) -
    reinterpret_cast<char*>(&altitude_)) + sizeof(queuepos_));
  // @@protoc_insertion_point(copy_constructor:tareados.TakeoffResponse)
}

void TakeoffResponse::SharedCtor() {
  ipdest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portdest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prevplane_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&altitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&queuepos_) -
      reinterpret_cast<char*>(&altitude_)) + sizeof(queuepos_));
}

TakeoffResponse::~TakeoffResponse() {
  // @@protoc_insertion_point(destructor:tareados.TakeoffResponse)
  SharedDtor();
}

void TakeoffResponse::SharedDtor() {
  ipdest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portdest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prevplane_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TakeoffResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TakeoffResponse::descriptor() {
  ::protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TakeoffResponse& TakeoffResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_planecontrol_2eproto::scc_info_TakeoffResponse.base);
  return *internal_default_instance();
}


void TakeoffResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tareados.TakeoffResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipdest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portdest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prevplane_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&altitude_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&queuepos_) -
      reinterpret_cast<char*>(&altitude_)) + sizeof(queuepos_));
  _internal_metadata_.Clear();
}

bool TakeoffResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareados.TakeoffResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 altitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 runway = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &runway_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ipDest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ipdest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes portDest = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_portdest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 queuePos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &queuepos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prevPlane = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prevplane()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prevplane().data(), static_cast<int>(this->prevplane().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareados.TakeoffResponse.prevPlane"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareados.TakeoffResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareados.TakeoffResponse)
  return false;
#undef DO_
}

void TakeoffResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareados.TakeoffResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 altitude = 1;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->altitude(), output);
  }

  // int32 runway = 2;
  if (this->runway() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->runway(), output);
  }

  // bytes ipDest = 3;
  if (this->ipdest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ipdest(), output);
  }

  // bytes portDest = 4;
  if (this->portdest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->portdest(), output);
  }

  // int32 queuePos = 5;
  if (this->queuepos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->queuepos(), output);
  }

  // string prevPlane = 6;
  if (this->prevplane().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prevplane().data(), static_cast<int>(this->prevplane().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.TakeoffResponse.prevPlane");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->prevplane(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareados.TakeoffResponse)
}

::google::protobuf::uint8* TakeoffResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareados.TakeoffResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 altitude = 1;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->altitude(), target);
  }

  // int32 runway = 2;
  if (this->runway() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->runway(), target);
  }

  // bytes ipDest = 3;
  if (this->ipdest().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ipdest(), target);
  }

  // bytes portDest = 4;
  if (this->portdest().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->portdest(), target);
  }

  // int32 queuePos = 5;
  if (this->queuepos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->queuepos(), target);
  }

  // string prevPlane = 6;
  if (this->prevplane().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prevplane().data(), static_cast<int>(this->prevplane().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.TakeoffResponse.prevPlane");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->prevplane(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareados.TakeoffResponse)
  return target;
}

size_t TakeoffResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareados.TakeoffResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ipDest = 3;
  if (this->ipdest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ipdest());
  }

  // bytes portDest = 4;
  if (this->portdest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->portdest());
  }

  // string prevPlane = 6;
  if (this->prevplane().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prevplane());
  }

  // int32 altitude = 1;
  if (this->altitude() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->altitude());
  }

  // int32 runway = 2;
  if (this->runway() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->runway());
  }

  // int32 queuePos = 5;
  if (this->queuepos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->queuepos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TakeoffResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareados.TakeoffResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeoffResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TakeoffResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareados.TakeoffResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareados.TakeoffResponse)
    MergeFrom(*source);
  }
}

void TakeoffResponse::MergeFrom(const TakeoffResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareados.TakeoffResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ipdest().size() > 0) {

    ipdest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipdest_);
  }
  if (from.portdest().size() > 0) {

    portdest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portdest_);
  }
  if (from.prevplane().size() > 0) {

    prevplane_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prevplane_);
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
  if (from.runway() != 0) {
    set_runway(from.runway());
  }
  if (from.queuepos() != 0) {
    set_queuepos(from.queuepos());
  }
}

void TakeoffResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareados.TakeoffResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeoffResponse::CopyFrom(const TakeoffResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareados.TakeoffResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeoffResponse::IsInitialized() const {
  return true;
}

void TakeoffResponse::Swap(TakeoffResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeoffResponse::InternalSwap(TakeoffResponse* other) {
  using std::swap;
  ipdest_.Swap(&other->ipdest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  portdest_.Swap(&other->portdest_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  prevplane_.Swap(&other->prevplane_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(altitude_, other->altitude_);
  swap(runway_, other->runway_);
  swap(queuepos_, other->queuepos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TakeoffResponse::GetMetadata() const {
  protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoRequest::kControlTowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoRequest::InfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_planecontrol_2eproto::scc_info_InfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareados.InfoRequest)
}
InfoRequest::InfoRequest(const InfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  controltower_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.controltower().size() > 0) {
    controltower_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.controltower_);
  }
  // @@protoc_insertion_point(copy_constructor:tareados.InfoRequest)
}

void InfoRequest::SharedCtor() {
  controltower_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InfoRequest::~InfoRequest() {
  // @@protoc_insertion_point(destructor:tareados.InfoRequest)
  SharedDtor();
}

void InfoRequest::SharedDtor() {
  controltower_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InfoRequest::descriptor() {
  ::protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InfoRequest& InfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_planecontrol_2eproto::scc_info_InfoRequest.base);
  return *internal_default_instance();
}


void InfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tareados.InfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  controltower_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool InfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareados.InfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string controlTower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_controltower()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->controltower().data(), static_cast<int>(this->controltower().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareados.InfoRequest.controlTower"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareados.InfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareados.InfoRequest)
  return false;
#undef DO_
}

void InfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareados.InfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string controlTower = 1;
  if (this->controltower().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->controltower().data(), static_cast<int>(this->controltower().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.InfoRequest.controlTower");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->controltower(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareados.InfoRequest)
}

::google::protobuf::uint8* InfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareados.InfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string controlTower = 1;
  if (this->controltower().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->controltower().data(), static_cast<int>(this->controltower().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.InfoRequest.controlTower");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->controltower(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareados.InfoRequest)
  return target;
}

size_t InfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareados.InfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string controlTower = 1;
  if (this->controltower().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->controltower());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareados.InfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareados.InfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareados.InfoRequest)
    MergeFrom(*source);
  }
}

void InfoRequest::MergeFrom(const InfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareados.InfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.controltower().size() > 0) {

    controltower_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.controltower_);
  }
}

void InfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareados.InfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoRequest::CopyFrom(const InfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareados.InfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoRequest::IsInitialized() const {
  return true;
}

void InfoRequest::Swap(InfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoRequest::InternalSwap(InfoRequest* other) {
  using std::swap;
  controltower_.Swap(&other->controltower_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InfoRequest::GetMetadata() const {
  protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoResponse::kDeparturePlaneFieldNumber;
const int InfoResponse::kArrivalPlaneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoResponse::InfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_planecontrol_2eproto::scc_info_InfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareados.InfoResponse)
}
InfoResponse::InfoResponse(const InfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      departureplane_(from.departureplane_),
      arrivalplane_(from.arrivalplane_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tareados.InfoResponse)
}

void InfoResponse::SharedCtor() {
}

InfoResponse::~InfoResponse() {
  // @@protoc_insertion_point(destructor:tareados.InfoResponse)
  SharedDtor();
}

void InfoResponse::SharedDtor() {
}

void InfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InfoResponse::descriptor() {
  ::protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InfoResponse& InfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_planecontrol_2eproto::scc_info_InfoResponse.base);
  return *internal_default_instance();
}


void InfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tareados.InfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  departureplane_.Clear();
  arrivalplane_.Clear();
  _internal_metadata_.Clear();
}

bool InfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareados.InfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tareados.plane departurePlane = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_departureplane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tareados.plane arrivalPlane = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrivalplane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareados.InfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareados.InfoResponse)
  return false;
#undef DO_
}

void InfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareados.InfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tareados.plane departurePlane = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->departureplane_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->departureplane(static_cast<int>(i)),
      output);
  }

  // repeated .tareados.plane arrivalPlane = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivalplane_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->arrivalplane(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareados.InfoResponse)
}

::google::protobuf::uint8* InfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareados.InfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tareados.plane departurePlane = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->departureplane_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->departureplane(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tareados.plane arrivalPlane = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivalplane_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->arrivalplane(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareados.InfoResponse)
  return target;
}

size_t InfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareados.InfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tareados.plane departurePlane = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->departureplane_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->departureplane(static_cast<int>(i)));
    }
  }

  // repeated .tareados.plane arrivalPlane = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arrivalplane_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrivalplane(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareados.InfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareados.InfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareados.InfoResponse)
    MergeFrom(*source);
  }
}

void InfoResponse::MergeFrom(const InfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareados.InfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  departureplane_.MergeFrom(from.departureplane_);
  arrivalplane_.MergeFrom(from.arrivalplane_);
}

void InfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareados.InfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoResponse::CopyFrom(const InfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareados.InfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoResponse::IsInitialized() const {
  return true;
}

void InfoResponse::Swap(InfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoResponse::InternalSwap(InfoResponse* other) {
  using std::swap;
  CastToBase(&departureplane_)->InternalSwap(CastToBase(&other->departureplane_));
  CastToBase(&arrivalplane_)->InternalSwap(CastToBase(&other->arrivalplane_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InfoResponse::GetMetadata() const {
  protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void plane::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int plane::kPlaneIdFieldNumber;
const int plane::kSourceNameFieldNumber;
const int plane::kDestNameFieldNumber;
const int plane::kDepartureTimeFieldNumber;
const int plane::kArrivalTimeFieldNumber;
const int plane::kSourceRunwayFieldNumber;
const int plane::kDestRunwayFieldNumber;
const int plane::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

plane::plane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_planecontrol_2eproto::scc_info_plane.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareados.plane)
}
plane::plane(const plane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sourcename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sourcename().size() > 0) {
    sourcename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcename_);
  }
  destname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destname().size() > 0) {
    destname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destname_);
  }
  departuretime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.departuretime().size() > 0) {
    departuretime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.departuretime_);
  }
  arrivaltime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.arrivaltime().size() > 0) {
    arrivaltime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arrivaltime_);
  }
  ::memcpy(&planeid_, &from.planeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&altitude_) -
    reinterpret_cast<char*>(&planeid_)) + sizeof(altitude_));
  // @@protoc_insertion_point(copy_constructor:tareados.plane)
}

void plane::SharedCtor() {
  sourcename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  departuretime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arrivaltime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&planeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&planeid_)) + sizeof(altitude_));
}

plane::~plane() {
  // @@protoc_insertion_point(destructor:tareados.plane)
  SharedDtor();
}

void plane::SharedDtor() {
  sourcename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  departuretime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arrivaltime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void plane::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* plane::descriptor() {
  ::protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const plane& plane::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_planecontrol_2eproto::scc_info_plane.base);
  return *internal_default_instance();
}


void plane::Clear() {
// @@protoc_insertion_point(message_clear_start:tareados.plane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sourcename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  departuretime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arrivaltime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&planeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&planeid_)) + sizeof(altitude_));
  _internal_metadata_.Clear();
}

bool plane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareados.plane)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 planeId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &planeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sourceName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sourcename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sourcename().data(), static_cast<int>(this->sourcename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareados.plane.sourceName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destname().data(), static_cast<int>(this->destname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareados.plane.destName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string departureTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_departuretime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->departuretime().data(), static_cast<int>(this->departuretime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareados.plane.departureTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string arrivalTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arrivaltime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->arrivaltime().data(), static_cast<int>(this->arrivaltime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareados.plane.arrivalTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sourceRunway = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sourcerunway_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 destRunway = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &destrunway_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 altitude = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareados.plane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareados.plane)
  return false;
#undef DO_
}

void plane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareados.plane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 planeId = 1;
  if (this->planeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->planeid(), output);
  }

  // string sourceName = 2;
  if (this->sourcename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcename().data(), static_cast<int>(this->sourcename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.plane.sourceName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sourcename(), output);
  }

  // string destName = 3;
  if (this->destname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destname().data(), static_cast<int>(this->destname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.plane.destName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->destname(), output);
  }

  // string departureTime = 4;
  if (this->departuretime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->departuretime().data(), static_cast<int>(this->departuretime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.plane.departureTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->departuretime(), output);
  }

  // string arrivalTime = 5;
  if (this->arrivaltime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arrivaltime().data(), static_cast<int>(this->arrivaltime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.plane.arrivalTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->arrivaltime(), output);
  }

  // int32 sourceRunway = 6;
  if (this->sourcerunway() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sourcerunway(), output);
  }

  // int32 destRunway = 7;
  if (this->destrunway() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->destrunway(), output);
  }

  // int32 altitude = 8;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->altitude(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareados.plane)
}

::google::protobuf::uint8* plane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareados.plane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 planeId = 1;
  if (this->planeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->planeid(), target);
  }

  // string sourceName = 2;
  if (this->sourcename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourcename().data(), static_cast<int>(this->sourcename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.plane.sourceName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sourcename(), target);
  }

  // string destName = 3;
  if (this->destname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destname().data(), static_cast<int>(this->destname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.plane.destName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->destname(), target);
  }

  // string departureTime = 4;
  if (this->departuretime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->departuretime().data(), static_cast<int>(this->departuretime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.plane.departureTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->departuretime(), target);
  }

  // string arrivalTime = 5;
  if (this->arrivaltime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arrivaltime().data(), static_cast<int>(this->arrivaltime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareados.plane.arrivalTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->arrivaltime(), target);
  }

  // int32 sourceRunway = 6;
  if (this->sourcerunway() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sourcerunway(), target);
  }

  // int32 destRunway = 7;
  if (this->destrunway() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->destrunway(), target);
  }

  // int32 altitude = 8;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->altitude(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareados.plane)
  return target;
}

size_t plane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareados.plane)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sourceName = 2;
  if (this->sourcename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sourcename());
  }

  // string destName = 3;
  if (this->destname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destname());
  }

  // string departureTime = 4;
  if (this->departuretime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->departuretime());
  }

  // string arrivalTime = 5;
  if (this->arrivaltime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->arrivaltime());
  }

  // int32 planeId = 1;
  if (this->planeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->planeid());
  }

  // int32 sourceRunway = 6;
  if (this->sourcerunway() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sourcerunway());
  }

  // int32 destRunway = 7;
  if (this->destrunway() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->destrunway());
  }

  // int32 altitude = 8;
  if (this->altitude() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->altitude());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void plane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareados.plane)
  GOOGLE_DCHECK_NE(&from, this);
  const plane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const plane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareados.plane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareados.plane)
    MergeFrom(*source);
  }
}

void plane::MergeFrom(const plane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareados.plane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sourcename().size() > 0) {

    sourcename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourcename_);
  }
  if (from.destname().size() > 0) {

    destname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destname_);
  }
  if (from.departuretime().size() > 0) {

    departuretime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.departuretime_);
  }
  if (from.arrivaltime().size() > 0) {

    arrivaltime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arrivaltime_);
  }
  if (from.planeid() != 0) {
    set_planeid(from.planeid());
  }
  if (from.sourcerunway() != 0) {
    set_sourcerunway(from.sourcerunway());
  }
  if (from.destrunway() != 0) {
    set_destrunway(from.destrunway());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
}

void plane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareados.plane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void plane::CopyFrom(const plane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareados.plane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool plane::IsInitialized() const {
  return true;
}

void plane::Swap(plane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void plane::InternalSwap(plane* other) {
  using std::swap;
  sourcename_.Swap(&other->sourcename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destname_.Swap(&other->destname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  departuretime_.Swap(&other->departuretime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  arrivaltime_.Swap(&other->arrivaltime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(planeid_, other->planeid_);
  swap(sourcerunway_, other->sourcerunway_);
  swap(destrunway_, other->destrunway_);
  swap(altitude_, other->altitude_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata plane::GetMetadata() const {
  protobuf_planecontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planecontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tareados
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareados::LandRequest* Arena::CreateMaybeMessage< ::tareados::LandRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tareados::LandRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareados::LandResponse* Arena::CreateMaybeMessage< ::tareados::LandResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tareados::LandResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareados::TakeoffRequest* Arena::CreateMaybeMessage< ::tareados::TakeoffRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tareados::TakeoffRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareados::TakeoffResponse* Arena::CreateMaybeMessage< ::tareados::TakeoffResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tareados::TakeoffResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareados::InfoRequest* Arena::CreateMaybeMessage< ::tareados::InfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tareados::InfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareados::InfoResponse* Arena::CreateMaybeMessage< ::tareados::InfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tareados::InfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareados::plane* Arena::CreateMaybeMessage< ::tareados::plane >(Arena* arena) {
  return Arena::CreateInternal< ::tareados::plane >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
