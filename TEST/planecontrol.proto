//

syntax = "proto3";

package tareados;

message LandRequest {
	Plane plane = 1;
	string dest = 2;
}

message LandResponse {
	int32 runway = 1;
	int32 queue = 2;
	int32 altitude = 3;
}

// service LandService {
// 	rpc Land(LandRequest) returns (LandResponse) {}
// }

message TakeoffRequest {
	Plane plane = 1;
	string dest = 2;
}

message TakeoffResponse {
	int32 altitude = 1;
	int32 runway = 2;
	//string ip_dest = 3;	// ip + puerto
	bytes ipDest = 3;		//or string ip_dest
	bytes portDest = 4;	//or string port_dest
	int32 queuePos = 5;
	string prevPlane = 6; //
	
}

// service TakeoffService {
// 	rpc Takeoff(TakeoffRequest) returns (TakeoffResponse) {}
// }

// === Panel de informacion ===

message InfoRequest {
	string controlTower = 1; 	//id de torre de control
}

message InfoResponse {
	repeated Plane departurePlane = 1; 	//id de vuelo de salida desde el aeropuerto
	repeated Plane arrivalPlane = 2;   	//id de vuelo de entrada desde el aeropuerto
}

// service InfoService {
// 	rpc Info(InfoRequest) returns (stream InfoResponse) {}
// }

message Plane {
	string airline = 1;
	string planeNumber = 2;
	int32 maxLoad = 3;
	int32 currLoad = 4;
	int32 maxCapacity = 5;
	int32 currCapacity = 6;
	string sourceAddress = 7;
	string destAddress = 8;
}

service PlaneControlService {
	rpc Land(LandRequest) returns (LandResponse) {}
	rpc Takeoff(TakeoffRequest) returns (TakeoffResponse) {}
	rpc Info(InfoRequest) returns (stream InfoResponse) {}
}


