//

syntax = "proto3";

package tareados;

// === Mensajes de aterrizaje ===

message LandRequest {
	string dest = 1;
	Plane plane = 2;
}

message LandResponse {
	int32 runway = 1;
	int32 queue = 2;
	int32 altitude = 3;
}

// === Mensajes de despegue ===

message TakeoffRequest {
	Plane plane = 1;
	string dest = 2;
	bool instOK = 3;			//si el avión necesita instrucciones = true sino no
}

message TakeoffResponse {
	int32 altitude = 1;
	int32 runway = 2;
	string dest = 3;
	int32 queuePos = 4;
	string prevPlane = 5;
	bool destOK = 6;			//si el destino es valido destOK = true sino no
	bool restrOK = 7;   		//si la restricciones se cumplen restrOK = true sino no
	bool instOK = 8;   			//si el avión envio instrucciones = true sino no
	
}

// === Panel de informacion ===

message InfoRequest {
	string controlTower = 1; 	//id de torre de control
}

message InfoResponse {
	repeated Plane departurePlane = 1; 	//id de vuelo de salida desde el aeropuerto
	repeated Plane arrivalPlane = 2;   	//id de vuelo de entrada desde el aeropuerto
}


message Plane {
	string airline = 1; 		//nombre aerolinea
	string planeNumber = 2;		//nombre del avion
	int32 maxLoad = 3;			//peso maximo
	int32 currLoad = 4;			//peso actual
	int32 maxCapacity = 5;		//capacidad de combustible maxima
	int32 currCapacity = 6;		//capacidad acutal de combustible
	string sourceAddress = 7;	//direccion de torre fuente
	string destAddress = 8;		//direccion de torre de destino
	int32 runway = 9;			//pista en la que se encuentra el avion, -1 si no esta en pista (en vuelo)
}

service PlaneControlService {
	rpc Land(stream LandRequest) returns (stream LandResponse) {}
	rpc Takeoff(stream TakeoffRequest) returns (stream TakeoffResponse) {}
	rpc Info(InfoRequest) returns (stream InfoResponse) {}
}


