# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import infocontrol_pb2 as infocontrol__pb2


class InfoServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Info = channel.unary_stream(
        '/InfoService/Info',
        request_serializer=infocontrol__pb2.InfoRequest.SerializeToString,
        response_deserializer=infocontrol__pb2.InfoResponse.FromString,
        )


class InfoServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Info(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_InfoServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Info': grpc.unary_stream_rpc_method_handler(
          servicer.Info,
          request_deserializer=infocontrol__pb2.InfoRequest.FromString,
          response_serializer=infocontrol__pb2.InfoResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'InfoService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
