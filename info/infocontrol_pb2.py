# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: infocontrol.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='infocontrol.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x11infocontrol.proto\"$\n\x0bInfoRequest\x12\x15\n\rcontrol_tower\x18\x01 \x01(\t\"L\n\x0cInfoResponse\x12\x1e\n\x0e\x64\x65parturePlane\x18\x01 \x03(\x0b\x32\x06.Plane\x12\x1c\n\x0c\x61rrivalPlane\x18\x02 \x03(\x0b\x32\x06.Plane\"\xb7\x01\n\x05Plane\x12\x0f\n\x07\x61irline\x18\x01 \x01(\t\x12\x13\n\x0bplaneNumber\x18\x02 \x01(\t\x12\x0f\n\x07maxLoad\x18\x03 \x01(\x05\x12\x10\n\x08\x63urrLoad\x18\x04 \x01(\x05\x12\x13\n\x0bmaxCapacity\x18\x05 \x01(\x05\x12\x14\n\x0c\x63urrCapacity\x18\x06 \x01(\x05\x12\x15\n\rsourceAddress\x18\x07 \x01(\t\x12\x13\n\x0b\x64\x65stAddress\x18\x08 \x01(\t\x12\x0e\n\x06runway\x18\t \x01(\x05\x32\x36\n\x0bInfoService\x12\'\n\x04Info\x12\x0c.InfoRequest\x1a\r.InfoResponse\"\x00\x30\x01\x62\x06proto3')
)




_INFOREQUEST = _descriptor.Descriptor(
  name='InfoRequest',
  full_name='InfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='control_tower', full_name='InfoRequest.control_tower', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=57,
)


_INFORESPONSE = _descriptor.Descriptor(
  name='InfoResponse',
  full_name='InfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='departurePlane', full_name='InfoResponse.departurePlane', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='arrivalPlane', full_name='InfoResponse.arrivalPlane', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=59,
  serialized_end=135,
)


_PLANE = _descriptor.Descriptor(
  name='Plane',
  full_name='Plane',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='airline', full_name='Plane.airline', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='planeNumber', full_name='Plane.planeNumber', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maxLoad', full_name='Plane.maxLoad', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currLoad', full_name='Plane.currLoad', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maxCapacity', full_name='Plane.maxCapacity', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='currCapacity', full_name='Plane.currCapacity', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sourceAddress', full_name='Plane.sourceAddress', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='destAddress', full_name='Plane.destAddress', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='runway', full_name='Plane.runway', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=138,
  serialized_end=321,
)

_INFORESPONSE.fields_by_name['departurePlane'].message_type = _PLANE
_INFORESPONSE.fields_by_name['arrivalPlane'].message_type = _PLANE
DESCRIPTOR.message_types_by_name['InfoRequest'] = _INFOREQUEST
DESCRIPTOR.message_types_by_name['InfoResponse'] = _INFORESPONSE
DESCRIPTOR.message_types_by_name['Plane'] = _PLANE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

InfoRequest = _reflection.GeneratedProtocolMessageType('InfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _INFOREQUEST,
  __module__ = 'infocontrol_pb2'
  # @@protoc_insertion_point(class_scope:InfoRequest)
  ))
_sym_db.RegisterMessage(InfoRequest)

InfoResponse = _reflection.GeneratedProtocolMessageType('InfoResponse', (_message.Message,), dict(
  DESCRIPTOR = _INFORESPONSE,
  __module__ = 'infocontrol_pb2'
  # @@protoc_insertion_point(class_scope:InfoResponse)
  ))
_sym_db.RegisterMessage(InfoResponse)

Plane = _reflection.GeneratedProtocolMessageType('Plane', (_message.Message,), dict(
  DESCRIPTOR = _PLANE,
  __module__ = 'infocontrol_pb2'
  # @@protoc_insertion_point(class_scope:Plane)
  ))
_sym_db.RegisterMessage(Plane)



_INFOSERVICE = _descriptor.ServiceDescriptor(
  name='InfoService',
  full_name='InfoService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=323,
  serialized_end=377,
  methods=[
  _descriptor.MethodDescriptor(
    name='Info',
    full_name='InfoService.Info',
    index=0,
    containing_service=None,
    input_type=_INFOREQUEST,
    output_type=_INFORESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFOSERVICE)

DESCRIPTOR.services_by_name['InfoService'] = _INFOSERVICE

# @@protoc_insertion_point(module_scope)
