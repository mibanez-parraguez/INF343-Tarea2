// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: infocontrol.proto

#include "infocontrol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_infocontrol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_infocontrol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlaneMsge;
}  // namespace protobuf_infocontrol_2eproto
namespace tareadosinfo {
class InfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoRequest>
      _instance;
} _InfoRequest_default_instance_;
class InfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoResponse>
      _instance;
} _InfoResponse_default_instance_;
class PlaneMsgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaneMsge>
      _instance;
} _PlaneMsge_default_instance_;
}  // namespace tareadosinfo
namespace protobuf_infocontrol_2eproto {
static void InitDefaultsInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareadosinfo::_InfoRequest_default_instance_;
    new (ptr) ::tareadosinfo::InfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareadosinfo::InfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInfoRequest}, {}};

static void InitDefaultsInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareadosinfo::_InfoResponse_default_instance_;
    new (ptr) ::tareadosinfo::InfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareadosinfo::InfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInfoResponse}, {
      &protobuf_infocontrol_2eproto::scc_info_PlaneMsge.base,}};

static void InitDefaultsPlaneMsge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tareadosinfo::_PlaneMsge_default_instance_;
    new (ptr) ::tareadosinfo::PlaneMsge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tareadosinfo::PlaneMsge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlaneMsge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlaneMsge}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlaneMsge.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::InfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::InfoRequest, control_tower_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::InfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::InfoResponse, departureplane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::InfoResponse, arrivalplane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::InfoResponse, control_tower_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, airline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, planenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, maxload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, currload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, maxcapacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, currcapacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, sourceaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, destaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tareadosinfo::PlaneMsge, runway_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tareadosinfo::InfoRequest)},
  { 6, -1, sizeof(::tareadosinfo::InfoResponse)},
  { 14, -1, sizeof(::tareadosinfo::PlaneMsge)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareadosinfo::_InfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareadosinfo::_InfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tareadosinfo::_PlaneMsge_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "infocontrol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021infocontrol.proto\022\014tareadosinfo\"$\n\013Inf"
      "oRequest\022\025\n\rcontrol_tower\030\001 \001(\t\"\205\001\n\014Info"
      "Response\022/\n\016departurePlane\030\001 \003(\0132\027.tarea"
      "dosinfo.PlaneMsge\022-\n\014arrivalPlane\030\002 \003(\0132"
      "\027.tareadosinfo.PlaneMsge\022\025\n\rcontrol_towe"
      "r\030\003 \001(\t\"\273\001\n\tPlaneMsge\022\017\n\007airline\030\001 \001(\t\022\023"
      "\n\013planeNumber\030\002 \001(\t\022\017\n\007maxLoad\030\003 \001(\005\022\020\n\010"
      "currLoad\030\004 \001(\005\022\023\n\013maxCapacity\030\005 \001(\005\022\024\n\014c"
      "urrCapacity\030\006 \001(\005\022\025\n\rsourceAddress\030\007 \001(\t"
      "\022\023\n\013destAddress\030\010 \001(\t\022\016\n\006runway\030\t \001(\0052P\n"
      "\013InfoService\022A\n\004Info\022\031.tareadosinfo.Info"
      "Request\032\032.tareadosinfo.InfoResponse\"\0000\001b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 487);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "infocontrol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_infocontrol_2eproto
namespace tareadosinfo {

// ===================================================================

void InfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoRequest::kControlTowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoRequest::InfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_infocontrol_2eproto::scc_info_InfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareadosinfo.InfoRequest)
}
InfoRequest::InfoRequest(const InfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  control_tower_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.control_tower().size() > 0) {
    control_tower_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.control_tower_);
  }
  // @@protoc_insertion_point(copy_constructor:tareadosinfo.InfoRequest)
}

void InfoRequest::SharedCtor() {
  control_tower_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InfoRequest::~InfoRequest() {
  // @@protoc_insertion_point(destructor:tareadosinfo.InfoRequest)
  SharedDtor();
}

void InfoRequest::SharedDtor() {
  control_tower_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InfoRequest::descriptor() {
  ::protobuf_infocontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_infocontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InfoRequest& InfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_infocontrol_2eproto::scc_info_InfoRequest.base);
  return *internal_default_instance();
}


void InfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tareadosinfo.InfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  control_tower_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool InfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareadosinfo.InfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string control_tower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_control_tower()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->control_tower().data(), static_cast<int>(this->control_tower().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareadosinfo.InfoRequest.control_tower"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareadosinfo.InfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareadosinfo.InfoRequest)
  return false;
#undef DO_
}

void InfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareadosinfo.InfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string control_tower = 1;
  if (this->control_tower().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->control_tower().data(), static_cast<int>(this->control_tower().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.InfoRequest.control_tower");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->control_tower(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareadosinfo.InfoRequest)
}

::google::protobuf::uint8* InfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareadosinfo.InfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string control_tower = 1;
  if (this->control_tower().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->control_tower().data(), static_cast<int>(this->control_tower().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.InfoRequest.control_tower");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->control_tower(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareadosinfo.InfoRequest)
  return target;
}

size_t InfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareadosinfo.InfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string control_tower = 1;
  if (this->control_tower().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->control_tower());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareadosinfo.InfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareadosinfo.InfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareadosinfo.InfoRequest)
    MergeFrom(*source);
  }
}

void InfoRequest::MergeFrom(const InfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareadosinfo.InfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.control_tower().size() > 0) {

    control_tower_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.control_tower_);
  }
}

void InfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareadosinfo.InfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoRequest::CopyFrom(const InfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareadosinfo.InfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoRequest::IsInitialized() const {
  return true;
}

void InfoRequest::Swap(InfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoRequest::InternalSwap(InfoRequest* other) {
  using std::swap;
  control_tower_.Swap(&other->control_tower_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InfoRequest::GetMetadata() const {
  protobuf_infocontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_infocontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoResponse::kDeparturePlaneFieldNumber;
const int InfoResponse::kArrivalPlaneFieldNumber;
const int InfoResponse::kControlTowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoResponse::InfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_infocontrol_2eproto::scc_info_InfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareadosinfo.InfoResponse)
}
InfoResponse::InfoResponse(const InfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      departureplane_(from.departureplane_),
      arrivalplane_(from.arrivalplane_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  control_tower_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.control_tower().size() > 0) {
    control_tower_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.control_tower_);
  }
  // @@protoc_insertion_point(copy_constructor:tareadosinfo.InfoResponse)
}

void InfoResponse::SharedCtor() {
  control_tower_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InfoResponse::~InfoResponse() {
  // @@protoc_insertion_point(destructor:tareadosinfo.InfoResponse)
  SharedDtor();
}

void InfoResponse::SharedDtor() {
  control_tower_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InfoResponse::descriptor() {
  ::protobuf_infocontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_infocontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InfoResponse& InfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_infocontrol_2eproto::scc_info_InfoResponse.base);
  return *internal_default_instance();
}


void InfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tareadosinfo.InfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  departureplane_.Clear();
  arrivalplane_.Clear();
  control_tower_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool InfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareadosinfo.InfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tareadosinfo.PlaneMsge departurePlane = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_departureplane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tareadosinfo.PlaneMsge arrivalPlane = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrivalplane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string control_tower = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_control_tower()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->control_tower().data(), static_cast<int>(this->control_tower().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareadosinfo.InfoResponse.control_tower"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareadosinfo.InfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareadosinfo.InfoResponse)
  return false;
#undef DO_
}

void InfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareadosinfo.InfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tareadosinfo.PlaneMsge departurePlane = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->departureplane_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->departureplane(static_cast<int>(i)),
      output);
  }

  // repeated .tareadosinfo.PlaneMsge arrivalPlane = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivalplane_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->arrivalplane(static_cast<int>(i)),
      output);
  }

  // string control_tower = 3;
  if (this->control_tower().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->control_tower().data(), static_cast<int>(this->control_tower().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.InfoResponse.control_tower");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->control_tower(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareadosinfo.InfoResponse)
}

::google::protobuf::uint8* InfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareadosinfo.InfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tareadosinfo.PlaneMsge departurePlane = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->departureplane_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->departureplane(static_cast<int>(i)), deterministic, target);
  }

  // repeated .tareadosinfo.PlaneMsge arrivalPlane = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrivalplane_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->arrivalplane(static_cast<int>(i)), deterministic, target);
  }

  // string control_tower = 3;
  if (this->control_tower().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->control_tower().data(), static_cast<int>(this->control_tower().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.InfoResponse.control_tower");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->control_tower(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareadosinfo.InfoResponse)
  return target;
}

size_t InfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareadosinfo.InfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tareadosinfo.PlaneMsge departurePlane = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->departureplane_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->departureplane(static_cast<int>(i)));
    }
  }

  // repeated .tareadosinfo.PlaneMsge arrivalPlane = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arrivalplane_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrivalplane(static_cast<int>(i)));
    }
  }

  // string control_tower = 3;
  if (this->control_tower().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->control_tower());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareadosinfo.InfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareadosinfo.InfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareadosinfo.InfoResponse)
    MergeFrom(*source);
  }
}

void InfoResponse::MergeFrom(const InfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareadosinfo.InfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  departureplane_.MergeFrom(from.departureplane_);
  arrivalplane_.MergeFrom(from.arrivalplane_);
  if (from.control_tower().size() > 0) {

    control_tower_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.control_tower_);
  }
}

void InfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareadosinfo.InfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoResponse::CopyFrom(const InfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareadosinfo.InfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoResponse::IsInitialized() const {
  return true;
}

void InfoResponse::Swap(InfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoResponse::InternalSwap(InfoResponse* other) {
  using std::swap;
  CastToBase(&departureplane_)->InternalSwap(CastToBase(&other->departureplane_));
  CastToBase(&arrivalplane_)->InternalSwap(CastToBase(&other->arrivalplane_));
  control_tower_.Swap(&other->control_tower_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InfoResponse::GetMetadata() const {
  protobuf_infocontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_infocontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaneMsge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaneMsge::kAirlineFieldNumber;
const int PlaneMsge::kPlaneNumberFieldNumber;
const int PlaneMsge::kMaxLoadFieldNumber;
const int PlaneMsge::kCurrLoadFieldNumber;
const int PlaneMsge::kMaxCapacityFieldNumber;
const int PlaneMsge::kCurrCapacityFieldNumber;
const int PlaneMsge::kSourceAddressFieldNumber;
const int PlaneMsge::kDestAddressFieldNumber;
const int PlaneMsge::kRunwayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaneMsge::PlaneMsge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_infocontrol_2eproto::scc_info_PlaneMsge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tareadosinfo.PlaneMsge)
}
PlaneMsge::PlaneMsge(const PlaneMsge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  airline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.airline().size() > 0) {
    airline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.airline_);
  }
  planenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.planenumber().size() > 0) {
    planenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.planenumber_);
  }
  sourceaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sourceaddress().size() > 0) {
    sourceaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourceaddress_);
  }
  destaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destaddress().size() > 0) {
    destaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destaddress_);
  }
  ::memcpy(&maxload_, &from.maxload_,
    static_cast<size_t>(reinterpret_cast<char*>(&runway_) -
    reinterpret_cast<char*>(&maxload_)) + sizeof(runway_));
  // @@protoc_insertion_point(copy_constructor:tareadosinfo.PlaneMsge)
}

void PlaneMsge::SharedCtor() {
  airline_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  planenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourceaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxload_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&runway_) -
      reinterpret_cast<char*>(&maxload_)) + sizeof(runway_));
}

PlaneMsge::~PlaneMsge() {
  // @@protoc_insertion_point(destructor:tareadosinfo.PlaneMsge)
  SharedDtor();
}

void PlaneMsge::SharedDtor() {
  airline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  planenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourceaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlaneMsge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlaneMsge::descriptor() {
  ::protobuf_infocontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_infocontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaneMsge& PlaneMsge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_infocontrol_2eproto::scc_info_PlaneMsge.base);
  return *internal_default_instance();
}


void PlaneMsge::Clear() {
// @@protoc_insertion_point(message_clear_start:tareadosinfo.PlaneMsge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  airline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  planenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourceaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxload_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&runway_) -
      reinterpret_cast<char*>(&maxload_)) + sizeof(runway_));
  _internal_metadata_.Clear();
}

bool PlaneMsge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tareadosinfo.PlaneMsge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string airline = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_airline()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->airline().data(), static_cast<int>(this->airline().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareadosinfo.PlaneMsge.airline"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string planeNumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_planenumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->planenumber().data(), static_cast<int>(this->planenumber().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareadosinfo.PlaneMsge.planeNumber"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxLoad = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 currLoad = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxCapacity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxcapacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 currCapacity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currcapacity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sourceAddress = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sourceaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sourceaddress().data(), static_cast<int>(this->sourceaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareadosinfo.PlaneMsge.sourceAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destAddress = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destaddress()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destaddress().data(), static_cast<int>(this->destaddress().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tareadosinfo.PlaneMsge.destAddress"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 runway = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &runway_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tareadosinfo.PlaneMsge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tareadosinfo.PlaneMsge)
  return false;
#undef DO_
}

void PlaneMsge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tareadosinfo.PlaneMsge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string airline = 1;
  if (this->airline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->airline().data(), static_cast<int>(this->airline().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.PlaneMsge.airline");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->airline(), output);
  }

  // string planeNumber = 2;
  if (this->planenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->planenumber().data(), static_cast<int>(this->planenumber().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.PlaneMsge.planeNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->planenumber(), output);
  }

  // int32 maxLoad = 3;
  if (this->maxload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxload(), output);
  }

  // int32 currLoad = 4;
  if (this->currload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->currload(), output);
  }

  // int32 maxCapacity = 5;
  if (this->maxcapacity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->maxcapacity(), output);
  }

  // int32 currCapacity = 6;
  if (this->currcapacity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->currcapacity(), output);
  }

  // string sourceAddress = 7;
  if (this->sourceaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourceaddress().data(), static_cast<int>(this->sourceaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.PlaneMsge.sourceAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sourceaddress(), output);
  }

  // string destAddress = 8;
  if (this->destaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destaddress().data(), static_cast<int>(this->destaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.PlaneMsge.destAddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->destaddress(), output);
  }

  // int32 runway = 9;
  if (this->runway() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->runway(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tareadosinfo.PlaneMsge)
}

::google::protobuf::uint8* PlaneMsge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tareadosinfo.PlaneMsge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string airline = 1;
  if (this->airline().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->airline().data(), static_cast<int>(this->airline().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.PlaneMsge.airline");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->airline(), target);
  }

  // string planeNumber = 2;
  if (this->planenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->planenumber().data(), static_cast<int>(this->planenumber().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.PlaneMsge.planeNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->planenumber(), target);
  }

  // int32 maxLoad = 3;
  if (this->maxload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxload(), target);
  }

  // int32 currLoad = 4;
  if (this->currload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->currload(), target);
  }

  // int32 maxCapacity = 5;
  if (this->maxcapacity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->maxcapacity(), target);
  }

  // int32 currCapacity = 6;
  if (this->currcapacity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->currcapacity(), target);
  }

  // string sourceAddress = 7;
  if (this->sourceaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sourceaddress().data(), static_cast<int>(this->sourceaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.PlaneMsge.sourceAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sourceaddress(), target);
  }

  // string destAddress = 8;
  if (this->destaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destaddress().data(), static_cast<int>(this->destaddress().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tareadosinfo.PlaneMsge.destAddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->destaddress(), target);
  }

  // int32 runway = 9;
  if (this->runway() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->runway(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tareadosinfo.PlaneMsge)
  return target;
}

size_t PlaneMsge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tareadosinfo.PlaneMsge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string airline = 1;
  if (this->airline().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->airline());
  }

  // string planeNumber = 2;
  if (this->planenumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->planenumber());
  }

  // string sourceAddress = 7;
  if (this->sourceaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sourceaddress());
  }

  // string destAddress = 8;
  if (this->destaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destaddress());
  }

  // int32 maxLoad = 3;
  if (this->maxload() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxload());
  }

  // int32 currLoad = 4;
  if (this->currload() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->currload());
  }

  // int32 maxCapacity = 5;
  if (this->maxcapacity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxcapacity());
  }

  // int32 currCapacity = 6;
  if (this->currcapacity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->currcapacity());
  }

  // int32 runway = 9;
  if (this->runway() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->runway());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlaneMsge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tareadosinfo.PlaneMsge)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaneMsge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaneMsge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tareadosinfo.PlaneMsge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tareadosinfo.PlaneMsge)
    MergeFrom(*source);
  }
}

void PlaneMsge::MergeFrom(const PlaneMsge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tareadosinfo.PlaneMsge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.airline().size() > 0) {

    airline_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.airline_);
  }
  if (from.planenumber().size() > 0) {

    planenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.planenumber_);
  }
  if (from.sourceaddress().size() > 0) {

    sourceaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourceaddress_);
  }
  if (from.destaddress().size() > 0) {

    destaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destaddress_);
  }
  if (from.maxload() != 0) {
    set_maxload(from.maxload());
  }
  if (from.currload() != 0) {
    set_currload(from.currload());
  }
  if (from.maxcapacity() != 0) {
    set_maxcapacity(from.maxcapacity());
  }
  if (from.currcapacity() != 0) {
    set_currcapacity(from.currcapacity());
  }
  if (from.runway() != 0) {
    set_runway(from.runway());
  }
}

void PlaneMsge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tareadosinfo.PlaneMsge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaneMsge::CopyFrom(const PlaneMsge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tareadosinfo.PlaneMsge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaneMsge::IsInitialized() const {
  return true;
}

void PlaneMsge::Swap(PlaneMsge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaneMsge::InternalSwap(PlaneMsge* other) {
  using std::swap;
  airline_.Swap(&other->airline_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  planenumber_.Swap(&other->planenumber_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sourceaddress_.Swap(&other->sourceaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  destaddress_.Swap(&other->destaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(maxload_, other->maxload_);
  swap(currload_, other->currload_);
  swap(maxcapacity_, other->maxcapacity_);
  swap(currcapacity_, other->currcapacity_);
  swap(runway_, other->runway_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlaneMsge::GetMetadata() const {
  protobuf_infocontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_infocontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tareadosinfo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareadosinfo::InfoRequest* Arena::CreateMaybeMessage< ::tareadosinfo::InfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tareadosinfo::InfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareadosinfo::InfoResponse* Arena::CreateMaybeMessage< ::tareadosinfo::InfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tareadosinfo::InfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tareadosinfo::PlaneMsge* Arena::CreateMaybeMessage< ::tareadosinfo::PlaneMsge >(Arena* arena) {
  return Arena::CreateInternal< ::tareadosinfo::PlaneMsge >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
